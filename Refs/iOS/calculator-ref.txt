import SwiftUI
struct ContentView:View{
@State var value:Bool = false
@State var currVal:Int = "0"
    @State var op:String
@State var prevVal:String
 func handleTap(type :Any,value :Any)->Void {
    if (type as! String=="number")
{
        currVal =  {currVal}()
}
    if (type as! String=="op")
{
op = value
prevVal = currVal
currVal = 0
}
    if (type as! String=="clear")
{
currVal = 0


}
    if (type as! String=="posneg")
{
currVal = `${parseFloat(currVal) * -1}`
}
    if (type as! String=="percentage")
{
currVal = `${parseFloat(currVal) * 0.01}`
}
    if (type as! String=="equal")
{
        var current: Int  = parseFloat(currVal)
        var previous: Int  = parseFloat(prevVal)
    
if (op=="+")
         {
currVal = previous+current


}
if (op=="/")
{
currVal = previous/current


}
if (op=="-")
{
currVal = previous-current


}
if (op=="*")
{
currVal = previous*current


}
}
}
 var body:some View {
                        VStack{
        
        Text(currVal)
            .font(.system().foregroundColor(Color."#fff")))Button(action:{
handleTap("clear")



}
,label:{
 Text("C")
 }
 )
Button(action:{
handleTap("posneg")



}
,label:{
 Text("+/-")
 }
 )
Button(action:{
handleTap("percentage")



}
,label:{
 Text("%")
 }
 )
Button(action:{
handleTap("operator","/")



}
,label:{
 Text("/")
 }
 )
Button(action:{
handleTap("number",7)



}
,label:{
 Text("7")
 }
 )
Button(action:{
handleTap("number",8)



}
,label:{
 Text("8")
 }
 )
Button(action:{
handleTap("number",9)



}
,label:{
 Text("9")
 }
 )
Button(action:{
handleTap("operator","*")



}
,label:{
 Text("x")
 }
 )
Button(action:{
handleTap("number",4)



}
,label:{
 Text("4")
 }
 )
Button(action:{
handleTap("number",5)



}
,label:{
 Text("5")
 }
 )
Button(action:{
handleTap("number",6)



}
,label:{
 Text("6")
 }
 )
Button(action:{



}
,label:{
 Text("-")
 }
 )
Button(action:{
handleTap("number",1)



}
,label:{
 Text("1")
 }
 )
Button(action:{
handleTap("number",2)



}
,label:{
 Text("2")
 }
 )
Button(action:{
handleTap("number",3)



}
,label:{
 Text("3")
 }
 )
Button(action:{
handleTap("operator","+")



}
,label:{
 Text("+")
 }
 )
Button(action:{
handleTap("number",0)



}
,label:{
 Text("0")
 }
 )
Button(action:{
handleTap("number",".")



}
,label:{
 Text(".")
 }
 )
Button(action:{
handleTap("equal")



}
,label:{
 Text("=")
 }
 )
}
 }
 }
struct ContentView_Previews:PreviewProvider{
static var previews:some View{
ContentView() }
 }